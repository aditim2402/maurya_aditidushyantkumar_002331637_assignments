/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.PersonDirectory;



import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Person;
import model.PersonDirectory;
/**
 *
 * @author aditi
 */
public class ManagePerson extends javax.swing.JPanel {

    JPanel userProcessContainer;
    PersonDirectory personDirectory;
    public ManagePerson(JPanel container, PersonDirectory directory) {
        initComponents();
        userProcessContainer= container;
        personDirectory= directory;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tblperson = new javax.swing.JScrollPane();
        tblProfile = new javax.swing.JTable();
        btnsearch = new javax.swing.JButton();
        btnview = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        btnback = new javax.swing.JButton();
        lblManagePersonDetails = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 204));

        tblProfile.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "First Name", "Last Name", "Salary", "Age", "Gender", "Height", "Home City", "Home ZipCode", "Work City", "Work ZipCode"
            }
        ));
        tblperson.setViewportView(tblProfile);

        btnsearch.setBackground(new java.awt.Color(255, 153, 153));
        btnsearch.setText("Search");
        btnsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchActionPerformed(evt);
            }
        });

        btnview.setBackground(new java.awt.Color(255, 153, 153));
        btnview.setText("View");
        btnview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnviewActionPerformed(evt);
            }
        });

        btndelete.setBackground(new java.awt.Color(255, 153, 153));
        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        btnback.setBackground(new java.awt.Color(255, 153, 153));
        btnback.setText("<<<Back");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        lblManagePersonDetails.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblManagePersonDetails.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblManagePersonDetails.setText("Manage Person Details");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tblperson, javax.swing.GroupLayout.DEFAULT_SIZE, 1286, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btndelete, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                    .addComponent(btnview, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnsearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(63, 63, 63)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(btnback)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblManagePersonDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnback)
                    .addComponent(lblManagePersonDetails))
                .addGap(26, 26, 26)
                .addComponent(tblperson, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnsearch)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnview)
                .addGap(18, 18, 18)
                .addComponent(btndelete)
                .addContainerGap(65, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchActionPerformed
         if (!txtSearch.getText().isBlank()){
            String searchTxt = txtSearch.getText();
            Person foundProfile = personDirectory.searchPerson(searchTxt);
            
            if (foundProfile != null){
                
                ViewJPanel panel = new ViewJPanel(userProcessContainer, personDirectory, foundProfile);
                userProcessContainer.add("ViewJPanel", panel);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            }
            else{
                JOptionPane.showMessageDialog(null,"Profile not found. Please check the input and try again.","Warning",JOptionPane.WARNING_MESSAGE);
            }
            txtSearch.setText("");
        }
        else{
            JOptionPane.showMessageDialog(null,"Please type the Person Details.","Warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnsearchActionPerformed

    private void btnviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnviewActionPerformed
         int selectedRow = tblProfile.getSelectedRow();
        
        if (selectedRow >= 0){
            Person selectedPerson = (Person) tblProfile.getValueAt(selectedRow, 0);
            
            ViewJPanel panel = new ViewJPanel(userProcessContainer, personDirectory, selectedPerson);
            userProcessContainer.add("ViewJPanel", panel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select a profile from the list to view details", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnviewActionPerformed

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer); 
    }//GEN-LAST:event_btnbackActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        int selectedRow = tblProfile.getSelectedRow();
        
        if (selectedRow >= 0) {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete the selected profile?","Warning",dialogButton);
            if (dialogResult == JOptionPane.YES_OPTION) {
                Person selectedPerson = (Person) tblProfile.getValueAt(selectedRow, 0);
                personDirectory.deletePerson(selectedPerson);
                populateTable();
            }
            else {
                JOptionPane.showMessageDialog(null, "Please select a profile from the list.","Warning", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btndeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnback;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnsearch;
    private javax.swing.JButton btnview;
    private javax.swing.JLabel lblManagePersonDetails;
    private javax.swing.JTable tblProfile;
    private javax.swing.JScrollPane tblperson;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    public void populateTable() {
        {
    
        DefaultTableModel model = (DefaultTableModel) tblProfile.getModel();
        model.setRowCount(0);

        for (Person a : personDirectory.getPersons()) {
            Object[] row = new Object[14];  // Updated to include additional fields

    // Person details
            
            row[0] = a;  
            row[1] = a.getlName(); 
            row[2]=a.getSalary();
            row[3]=a.getAge();
            row[4]=a.getGender();
            row[5]=a.getHeight();
            row[6] = a.getHomeAddress().getCity();        
            row[7] = a.getHomeAddress().getZipCode();
            row[8]=a.getWorkAddress().getCity();
            row[9] = a.getWorkAddress().getZipCode();   

            model.addRow(row);  // Add the updated row to the table
}
        }
    }
}
